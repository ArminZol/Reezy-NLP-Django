class Word():
	words = []

	def __init__(self, words):
		self.words = words

simplification_exceptions = {'divided': Word(['parted']), 
							'erudition': Word(['science']), 
							'eloquently': Word(['diligently']),
							'throng': Word(['pile', 'crush', 'pack', 'jam']),
							'revealed': Word(['broke']),
							'convulsions': Word(['fit']),
							'treachery': Word(['fake']),
							'promiscuous': Word(['abandoned']),
							'subjugation': Word(['servitude', 'yoke']),
							'examining': Word(['check', 'try']),
							'maximise': Word(['maximize'])}

simplification_exclusions = ['reminding', 
							'happened',
							'greater',
							'characters',
							'prepared',
							'breaking',
							'needs',
							'breakers',
							'questions',
							'cheapest',
							'austrian',
							'times',
							'seeing',
							'objects',
							'conditions',
							'acting',
							'obesity',
							'rates',
							'years',
							'ignored',
							'decreasing',
							'engaging',
							'integrating',
							'based',
							'pictures',
							'daisies',
							'created',
							'american',
							'schrodinger',
							'readability',
							'optimise',
							'individualised',
							'oorganisation',
							'becomes',
							'seated']

simplification_inclusions = ['controversy', 
							'contemporary',
							'contentious',
							'throng',
							'mayhem',
							'comparable',
							'extraordinary',
							'viands',
							'colleague',
							'extensive',
							'macronutrient']